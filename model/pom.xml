<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ron190</groupId>
        <artifactId>jsql-injection</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>model</artifactId>

    <repositories>
        <!--         <repository> -->
        <!--             <id>default</id> -->
        <!--             <url>https://repo.maven.apache.org/maven2/</url> -->
        <!--         </repository> -->
        <!--         <repository> -->
        <!--             <id>cubrid-repository</id> -->
        <!--             <url>http://maven.cubrid.org/</url> -->
        <!--         </repository> -->
        <!--         <repository> -->
        <!--             <id>jspresso-repository</id> -->
        <!--             <url>http://repository.jspresso.org/maven2</url> -->
        <!--         </repository> -->
        <!--         <repository> -->
        <!--             <id>exasol-repository</id> -->
        <!--             <url>https://maven.exasol.com/artifactory/exasol-releases</url> -->
        <!--             <snapshots> -->
        <!--                 <enabled>false</enabled> -->
        <!--             </snapshots> -->
        <!--         </repository> -->
        <!--         <repository> -->
        <!--             <id>oracle-repository</id> -->
        <!--             <url>http://maven.geomajas.org/</url> -->
        <!--         </repository> -->
        <!--         <repository> -->
        <!--             <id>monetdb-repository</id> -->
        <!--             <url>https://clojars.org/repo/</url> -->
        <!--         </repository> -->
    </repositories>

    <properties>
        <sonar.exclusions>**/blind/patch/*, **/DigestMD4.java</sonar.exclusions>

        <awaitility.version>4.2.0</awaitility.version>
        <bootstrap.version>5.3.1</bootstrap.version>
        <dnsjava.version>3.5.2</dnsjava.version>
        <gmavenplus-plugin.version>3.0.0</gmavenplus-plugin.version>
        <graphql-java-tools.version>5.2.4</graphql-java-tools.version>
        <graphql-spring-boot-starter.version>5.0.2</graphql-spring-boot-starter.version>
        <groovy-test-junit5.version>4.0.13</groovy-test-junit5.version>
        <h2.version>2.2.220</h2.version>
        <hsqldb.version>2.7.2</hsqldb.version>
        <javafaker.version>1.0.2</javafaker.version>
        <jaxb-api.version>2.1</jaxb-api.version>
        <jcabi-log.version>0.23.0</jcabi-log.version>
        <jna.version>5.13.0</jna.version>
        <jquery.version>3.7.0</jquery.version>
        <json.version>20230618</json.version>
        <jsoup.version>1.16.1</jsoup.version>
        <junit-pioneer.version>2.0.1</junit-pioneer.version>
        <juniversalchardet.version>1.0.3</juniversalchardet.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
        <!-- Spring startup PKIX error on later version -->
        <mssql-jdbc.version>9.4.1.jre8</mssql-jdbc.version>
        <mysql-connector-j.version>8.1.0</mysql-connector-j.version>
        <nashorn-core.version>15.4</nashorn-core.version>
        <!-- Java 11 unsupported on later version -->
        <neo4j-java-driver.version>5.11.0</neo4j-java-driver.version>
        <neo4j-jdbc-driver.version>4.0.9</neo4j-jdbc-driver.version>
        <ojdbc8.version>23.2.0.0</ojdbc8.version>
        <postgresql.version>42.6.0</postgresql.version>
        <snakeyaml.version>2.1</snakeyaml.version>
        <sockjs-client.version>1.5.1</sockjs-client.version>
        <spock-core.version>2.4-M1-groovy-4.0</spock-core.version>
        <spring-boot-dependencies.version>3.1.3</spring-boot-dependencies.version>
        <sqlite-jdbc.version>3.42.0.0</sqlite-jdbc.version>
        <sqlite-dialect.version>0.1.4</sqlite-dialect.version>
        <stomp-websocket.version>2.3.4</stomp-websocket.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!-- Build Spock UTs -->
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <configuration>
                    <testSources>
                        <testSource>
                            <directory>${project.basedir}/src/test/groovy</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                    </testSources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>addSources</goal>
                            <goal>addTestSources</goal>
                            <goal>addStubSources</goal>
                            <goal>addTestStubSources</goal>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Runs UTs -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <failIfNoTests>true</failIfNoTests>
                    <!-- Compatible only jdk > 9 -->
                    <argLine>@{argLine} ${MAVEN_NASHORN}</argLine>
                    <includes>
                        <include>**/*Spock</include>
                    </includes>
                    <!-- Display each method time metrics on a test class -->
                    <reportFormat>plain</reportFormat>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- Required to detect tests on version > 3.0.0-M4 without running JUnit4Provider -->
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!-- Runs ITs -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failIfNoTests>true</failIfNoTests>
                    <!-- Don't override, it breaks generating report -->
                    <argLine>@{argLine} ${MAVEN_NASHORN}</argLine>
                    <!-- Set number of retry, allows 1st test to run Spring then run other tests -->
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <includes>
                        <include>**/*SuiteIT.java</include>
                    </includes>
                    <!-- Display each method time metrics on a test class -->
                    <reportFormat>plain</reportFormat>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- Required to detect tests on version > 3.0.0-M4 without running JUnit4Provider -->
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Spring versions -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- jSQL purpose -->
        <dependency>
            <!-- Standalone Nashorn -->
            <groupId>org.openjdk.nashorn</groupId>
            <artifactId>nashorn-core</artifactId>
            <version>${nashorn-core.version}</version>
        </dependency>
        <dependency>
            <!-- Hex string encoding -->
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.juniversalchardet</groupId>
            <artifactId>juniversalchardet</artifactId>
            <version>${juniversalchardet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snakeyaml.version}</version>
        </dependency>

        <!-- Logger -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Websocket -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-messaging</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Stomp -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>${sockjs-client.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>${stomp-websocket.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- DNS -->
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>${dnsjava.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>${jna.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- GraphQL -->
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot-starter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>${graphql-java-tools.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot-starter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spock -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JSP -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp.jstl</groupId>
            <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
            <version>1.2.8.RELEASE</version>
            <scope>test</scope>
        </dependency>
<!--        <dependency>-->
<!--            &lt;!&ndash; Not usable, table rows not created:&ndash;&gt;-->
<!--            &lt;!&ndash; org.hibernate.property.access.spi.PropertyAccessException: Error accessing field [private java.lang.Integer spring.rest.Student.studentId] by reflection &ndash;&gt;-->
<!--            &lt;!&ndash; for persistent property [spring.rest.Student#studentId] : spring.rest.Student@4fa700f1 &ndash;&gt;-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-devtools</artifactId>-->
<!--            <optional>true</optional>-->
<!--        </dependency>-->

        <!-- Hibernate -->
        <dependency>
            <!-- Bridge with Hibernate -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- display c3p0 logs -->
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-community-dialects</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Retrying Failing Tests -->
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>${junit-pioneer.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Colors in logs -->
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-log</artifactId>
            <version>${jcabi-log.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Wait for APIs to set up -->
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JDBC drivers -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql-connector-j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>${mssql-jdbc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite-jdbc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver</artifactId>
            <version>${neo4j-java-driver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-jdbc-driver</artifactId>
            <version>${neo4j-jdbc-driver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>jcc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbynet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>${ojdbc8.version}</version>
            <scope>test</scope>
        </dependency>

        <!--         <dependency> -->
        <!--             <groupId>altibase</groupId> -->
        <!--             <artifactId>altibase-connector-java</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>7.1</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/Altibase.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>ctreeACE</groupId> -->
        <!--             <artifactId>ctreeace-connector-java</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>0.0</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/ctreeJDBC.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>frontbase</groupId> -->
        <!--             <artifactId>frontbase-connector-java</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>2.5.9</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/frontbasejdbc.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>intersystems-iris</groupId> -->
        <!--             <artifactId>intersystems-iris-connector-java</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>3.1.0</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/intersystems-jdbc-3.1.0.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>mimersql</groupId> -->
        <!--             <artifactId>mimersql</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>3.40</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/mimjdbc3.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>netezza</groupId> -->
        <!--             <artifactId>netezza</artifactId> -->
        <!--             <scope>system</scope> -->
        <!--             <version>3.40</version> -->
        <!--             <systemPath>${project.basedir}/src/test/resources/jdbc/nzjdbc-1.0.jar</systemPath> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>com.exasol</groupId> -->
        <!--             <artifactId>exasol-jdbc</artifactId> -->
        <!--             <version>7.0.3</version> -->
        <!--             <scope>test</scope> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>monetdb</groupId> -->
        <!--             <artifactId>monetdb-jdbc</artifactId> -->
        <!--             <version>2.29</version> -->
        <!--             <scope>test</scope> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>com.facebook.presto</groupId> -->
        <!--             <artifactId>presto-jdbc</artifactId> -->
        <!--             <version>0.243.2</version> -->
        <!--             <scope>test</scope> -->
        <!--         </dependency> -->
        <!--         <dependency> -->
        <!--             <groupId>org.firebirdsql.jdbc</groupId> -->
        <!--             <artifactId>jaybird</artifactId> -->
        <!--             <version>4.0.1.java7</version> -->
        <!--             <scope>test</scope> -->
        <!--         </dependency> -->

    </dependencies>
</project>