language: java
services: docker

git:
  # Disable shallow clone to send Git blame to Sonar
  depth: false

jdk: oraclejdk11

jobs:
  include:
  - env:
    - JSQL_DOCKERFILE=3.8.1-jdk-11-slim
    - MAVEN_NASHORN=-Dnashorn.args=--no-deprecation-warning
  - env:
    - JSQL_DOCKERFILE=3.8.1-openjdk-15-slim
    - MAVEN_NASHORN=

branches:
  only:
  - master
      
cache:
  directories:
    - $HOME/.m2
    - $HOME/.sonar/cache

before_script:
  - |
    env | sort
    sudo cat /proc/meminfo
    java -XX:+PrintFlagsFinal -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'
    
    # Prevent error 'You have reached your pull rate limit' with dedicated user
    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    docker-compose -f ./model/src/test/resources/docker/docker-compose.yml build --parallel
    docker-compose -f ./model/src/test/resources/docker/docker-compose.yml up -d
    ./model/src/test/resources/docker/healthcheck/healthcheck.sh
    ./model/src/test/resources/docker/script/buff.sh
    ./model/src/test/resources/docker/script/verify.sh
    
    docker rmi jsql:latest -f
    docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f model/src/test/resources/docker/Dockerfile.jsql .

script:
  - |
    docker run                                          \
    -t                                                  \
    --rm                                                \
    -v "$HOME/.m2":/root/.m2                            \
    -v "$HOME/.sonar/cache":/root/.sonar/cache          \
    --network docker_jsql-network                       \
    -e SONAR_TOKEN                                      \
    -e CODACY_PROJECT_TOKEN                             \
    -e CODECOV_TOKEN                                    \
    -e MAVEN_NASHORN                                    \
    jsql:latest                                         \
    ./model/src/test/resources/vnc/execute-on-vnc.sh    \
    bash -c '                                           \
        java -version                                   \
        && env|sort                                     \
        && mvn -T 1C clean verify sonar:sonar                 \
        && (cd view/ ; mvn -T 1C sonar:sonar)                 \
        && (cd model/ ; mvn -T 1C sonar:sonar)                \
        && (bash <(curl -s https://codecov.io/bash) || true)             \
        && (bash <(curl -Ls https://coverage.codacy.com/get.sh) || true) \
    ' 
    
    DOCKER_RUN="$?"
    echo docker run exit code: $DOCKER_RUN
    if [ "${DOCKER_RUN}" != "0" ]; then exit 1; fi

  - ./model/src/test/resources/docker/script/verify.sh